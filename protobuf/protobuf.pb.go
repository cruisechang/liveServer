// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type DealerLoginData struct {
	RoomID               int64    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Dealer               int64    `protobuf:"varint,2,opt,name=dealer,proto3" json:"dealer,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealerLoginData) Reset()         { *m = DealerLoginData{} }
func (m *DealerLoginData) String() string { return proto.CompactTextString(m) }
func (*DealerLoginData) ProtoMessage()    {}
func (*DealerLoginData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{1}
}
func (m *DealerLoginData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealerLoginData.Unmarshal(m, b)
}
func (m *DealerLoginData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealerLoginData.Marshal(b, m, deterministic)
}
func (dst *DealerLoginData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealerLoginData.Merge(dst, src)
}
func (m *DealerLoginData) XXX_Size() int {
	return xxx_messageInfo_DealerLoginData.Size(m)
}
func (m *DealerLoginData) XXX_DiscardUnknown() {
	xxx_messageInfo_DealerLoginData.DiscardUnknown(m)
}

var xxx_messageInfo_DealerLoginData proto.InternalMessageInfo

func (m *DealerLoginData) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *DealerLoginData) GetDealer() int64 {
	if m != nil {
		return m.Dealer
	}
	return 0
}

func (m *DealerLoginData) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type DealerLoginRes struct {
	Success              int64    `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealerLoginRes) Reset()         { *m = DealerLoginRes{} }
func (m *DealerLoginRes) String() string { return proto.CompactTextString(m) }
func (*DealerLoginRes) ProtoMessage()    {}
func (*DealerLoginRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{2}
}
func (m *DealerLoginRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealerLoginRes.Unmarshal(m, b)
}
func (m *DealerLoginRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealerLoginRes.Marshal(b, m, deterministic)
}
func (dst *DealerLoginRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealerLoginRes.Merge(dst, src)
}
func (m *DealerLoginRes) XXX_Size() int {
	return xxx_messageInfo_DealerLoginRes.Size(m)
}
func (m *DealerLoginRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DealerLoginRes.DiscardUnknown(m)
}

var xxx_messageInfo_DealerLoginRes proto.InternalMessageInfo

func (m *DealerLoginRes) GetSuccess() int64 {
	if m != nil {
		return m.Success
	}
	return 0
}

type RoomLoginData struct {
	RoomID               int64    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomLoginData) Reset()         { *m = RoomLoginData{} }
func (m *RoomLoginData) String() string { return proto.CompactTextString(m) }
func (*RoomLoginData) ProtoMessage()    {}
func (*RoomLoginData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{3}
}
func (m *RoomLoginData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomLoginData.Unmarshal(m, b)
}
func (m *RoomLoginData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomLoginData.Marshal(b, m, deterministic)
}
func (dst *RoomLoginData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomLoginData.Merge(dst, src)
}
func (m *RoomLoginData) XXX_Size() int {
	return xxx_messageInfo_RoomLoginData.Size(m)
}
func (m *RoomLoginData) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomLoginData.DiscardUnknown(m)
}

var xxx_messageInfo_RoomLoginData proto.InternalMessageInfo

func (m *RoomLoginData) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type OnlineNotifyData struct {
	RoomID               int64    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnlineNotifyData) Reset()         { *m = OnlineNotifyData{} }
func (m *OnlineNotifyData) String() string { return proto.CompactTextString(m) }
func (*OnlineNotifyData) ProtoMessage()    {}
func (*OnlineNotifyData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{4}
}
func (m *OnlineNotifyData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnlineNotifyData.Unmarshal(m, b)
}
func (m *OnlineNotifyData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnlineNotifyData.Marshal(b, m, deterministic)
}
func (dst *OnlineNotifyData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnlineNotifyData.Merge(dst, src)
}
func (m *OnlineNotifyData) XXX_Size() int {
	return xxx_messageInfo_OnlineNotifyData.Size(m)
}
func (m *OnlineNotifyData) XXX_DiscardUnknown() {
	xxx_messageInfo_OnlineNotifyData.DiscardUnknown(m)
}

var xxx_messageInfo_OnlineNotifyData proto.InternalMessageInfo

func (m *OnlineNotifyData) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type GetRoomInfoData struct {
	RoomID               int64    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomInfoData) Reset()         { *m = GetRoomInfoData{} }
func (m *GetRoomInfoData) String() string { return proto.CompactTextString(m) }
func (*GetRoomInfoData) ProtoMessage()    {}
func (*GetRoomInfoData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{5}
}
func (m *GetRoomInfoData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomInfoData.Unmarshal(m, b)
}
func (m *GetRoomInfoData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomInfoData.Marshal(b, m, deterministic)
}
func (dst *GetRoomInfoData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomInfoData.Merge(dst, src)
}
func (m *GetRoomInfoData) XXX_Size() int {
	return xxx_messageInfo_GetRoomInfoData.Size(m)
}
func (m *GetRoomInfoData) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomInfoData.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomInfoData proto.InternalMessageInfo

func (m *GetRoomInfoData) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type GetRoomInfoRes struct {
	Boot                 int64    `protobuf:"varint,1,opt,name=boot,proto3" json:"boot,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	RoomID               int64    `protobuf:"varint,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
	RoomName             string   `protobuf:"bytes,4,opt,name=roomName,proto3" json:"roomName,omitempty"`
	BankerPlayerMin      int64    `protobuf:"varint,5,opt,name=bankerPlayerMin,proto3" json:"bankerPlayerMin,omitempty"`
	BankerPlayerMax      int64    `protobuf:"varint,6,opt,name=bankerPlayerMax,proto3" json:"bankerPlayerMax,omitempty"`
	TieMin               int64    `protobuf:"varint,7,opt,name=tieMin,proto3" json:"tieMin,omitempty"`
	TieMax               int64    `protobuf:"varint,8,opt,name=tieMax,proto3" json:"tieMax,omitempty"`
	BankerPlayerPairMin  int64    `protobuf:"varint,9,opt,name=bankerPlayerPairMin,proto3" json:"bankerPlayerPairMin,omitempty"`
	BankerPlayerPairMax  int64    `protobuf:"varint,10,opt,name=bankerPlayerPairMax,proto3" json:"bankerPlayerPairMax,omitempty"`
	Online               int64    `protobuf:"varint,11,opt,name=online,proto3" json:"online,omitempty"`
	BetCountDown         int64    `protobuf:"varint,12,opt,name=betCountDown,proto3" json:"betCountDown,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRoomInfoRes) Reset()         { *m = GetRoomInfoRes{} }
func (m *GetRoomInfoRes) String() string { return proto.CompactTextString(m) }
func (*GetRoomInfoRes) ProtoMessage()    {}
func (*GetRoomInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{6}
}
func (m *GetRoomInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRoomInfoRes.Unmarshal(m, b)
}
func (m *GetRoomInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRoomInfoRes.Marshal(b, m, deterministic)
}
func (dst *GetRoomInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRoomInfoRes.Merge(dst, src)
}
func (m *GetRoomInfoRes) XXX_Size() int {
	return xxx_messageInfo_GetRoomInfoRes.Size(m)
}
func (m *GetRoomInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRoomInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetRoomInfoRes proto.InternalMessageInfo

func (m *GetRoomInfoRes) GetBoot() int64 {
	if m != nil {
		return m.Boot
	}
	return 0
}

func (m *GetRoomInfoRes) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *GetRoomInfoRes) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *GetRoomInfoRes) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

func (m *GetRoomInfoRes) GetBankerPlayerMin() int64 {
	if m != nil {
		return m.BankerPlayerMin
	}
	return 0
}

func (m *GetRoomInfoRes) GetBankerPlayerMax() int64 {
	if m != nil {
		return m.BankerPlayerMax
	}
	return 0
}

func (m *GetRoomInfoRes) GetTieMin() int64 {
	if m != nil {
		return m.TieMin
	}
	return 0
}

func (m *GetRoomInfoRes) GetTieMax() int64 {
	if m != nil {
		return m.TieMax
	}
	return 0
}

func (m *GetRoomInfoRes) GetBankerPlayerPairMin() int64 {
	if m != nil {
		return m.BankerPlayerPairMin
	}
	return 0
}

func (m *GetRoomInfoRes) GetBankerPlayerPairMax() int64 {
	if m != nil {
		return m.BankerPlayerPairMax
	}
	return 0
}

func (m *GetRoomInfoRes) GetOnline() int64 {
	if m != nil {
		return m.Online
	}
	return 0
}

func (m *GetRoomInfoRes) GetBetCountDown() int64 {
	if m != nil {
		return m.BetCountDown
	}
	return 0
}

type WaitingData struct {
	RoomID               int64    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Boot                 int64    `protobuf:"varint,2,opt,name=boot,proto3" json:"boot,omitempty"`
	Round                int64    `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitingData) Reset()         { *m = WaitingData{} }
func (m *WaitingData) String() string { return proto.CompactTextString(m) }
func (*WaitingData) ProtoMessage()    {}
func (*WaitingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{7}
}
func (m *WaitingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitingData.Unmarshal(m, b)
}
func (m *WaitingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitingData.Marshal(b, m, deterministic)
}
func (dst *WaitingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitingData.Merge(dst, src)
}
func (m *WaitingData) XXX_Size() int {
	return xxx_messageInfo_WaitingData.Size(m)
}
func (m *WaitingData) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitingData.DiscardUnknown(m)
}

var xxx_messageInfo_WaitingData proto.InternalMessageInfo

func (m *WaitingData) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *WaitingData) GetBoot() int64 {
	if m != nil {
		return m.Boot
	}
	return 0
}

func (m *WaitingData) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

type BeginBettingData struct {
	RoomID               int64    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Boot                 int64    `protobuf:"varint,2,opt,name=boot,proto3" json:"boot,omitempty"`
	Round                int64    `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeginBettingData) Reset()         { *m = BeginBettingData{} }
func (m *BeginBettingData) String() string { return proto.CompactTextString(m) }
func (*BeginBettingData) ProtoMessage()    {}
func (*BeginBettingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{8}
}
func (m *BeginBettingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeginBettingData.Unmarshal(m, b)
}
func (m *BeginBettingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeginBettingData.Marshal(b, m, deterministic)
}
func (dst *BeginBettingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeginBettingData.Merge(dst, src)
}
func (m *BeginBettingData) XXX_Size() int {
	return xxx_messageInfo_BeginBettingData.Size(m)
}
func (m *BeginBettingData) XXX_DiscardUnknown() {
	xxx_messageInfo_BeginBettingData.DiscardUnknown(m)
}

var xxx_messageInfo_BeginBettingData proto.InternalMessageInfo

func (m *BeginBettingData) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *BeginBettingData) GetBoot() int64 {
	if m != nil {
		return m.Boot
	}
	return 0
}

func (m *BeginBettingData) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

type BeginBettingRes struct {
	Round                int64    `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BeginBettingRes) Reset()         { *m = BeginBettingRes{} }
func (m *BeginBettingRes) String() string { return proto.CompactTextString(m) }
func (*BeginBettingRes) ProtoMessage()    {}
func (*BeginBettingRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{9}
}
func (m *BeginBettingRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeginBettingRes.Unmarshal(m, b)
}
func (m *BeginBettingRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeginBettingRes.Marshal(b, m, deterministic)
}
func (dst *BeginBettingRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeginBettingRes.Merge(dst, src)
}
func (m *BeginBettingRes) XXX_Size() int {
	return xxx_messageInfo_BeginBettingRes.Size(m)
}
func (m *BeginBettingRes) XXX_DiscardUnknown() {
	xxx_messageInfo_BeginBettingRes.DiscardUnknown(m)
}

var xxx_messageInfo_BeginBettingRes proto.InternalMessageInfo

func (m *BeginBettingRes) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

type EndBettingData struct {
	RoomID               int64    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EndBettingData) Reset()         { *m = EndBettingData{} }
func (m *EndBettingData) String() string { return proto.CompactTextString(m) }
func (*EndBettingData) ProtoMessage()    {}
func (*EndBettingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{10}
}
func (m *EndBettingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EndBettingData.Unmarshal(m, b)
}
func (m *EndBettingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EndBettingData.Marshal(b, m, deterministic)
}
func (dst *EndBettingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndBettingData.Merge(dst, src)
}
func (m *EndBettingData) XXX_Size() int {
	return xxx_messageInfo_EndBettingData.Size(m)
}
func (m *EndBettingData) XXX_DiscardUnknown() {
	xxx_messageInfo_EndBettingData.DiscardUnknown(m)
}

var xxx_messageInfo_EndBettingData proto.InternalMessageInfo

func (m *EndBettingData) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type ChangeBootData struct {
	RoomID               int64    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeBootData) Reset()         { *m = ChangeBootData{} }
func (m *ChangeBootData) String() string { return proto.CompactTextString(m) }
func (*ChangeBootData) ProtoMessage()    {}
func (*ChangeBootData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{11}
}
func (m *ChangeBootData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeBootData.Unmarshal(m, b)
}
func (m *ChangeBootData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeBootData.Marshal(b, m, deterministic)
}
func (dst *ChangeBootData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeBootData.Merge(dst, src)
}
func (m *ChangeBootData) XXX_Size() int {
	return xxx_messageInfo_ChangeBootData.Size(m)
}
func (m *ChangeBootData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeBootData.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeBootData proto.InternalMessageInfo

func (m *ChangeBootData) GetRoomID() int64 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type ChangeBootRes struct {
	Boot                 int64    `protobuf:"varint,1,opt,name=boot,proto3" json:"boot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeBootRes) Reset()         { *m = ChangeBootRes{} }
func (m *ChangeBootRes) String() string { return proto.CompactTextString(m) }
func (*ChangeBootRes) ProtoMessage()    {}
func (*ChangeBootRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{12}
}
func (m *ChangeBootRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeBootRes.Unmarshal(m, b)
}
func (m *ChangeBootRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeBootRes.Marshal(b, m, deterministic)
}
func (dst *ChangeBootRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeBootRes.Merge(dst, src)
}
func (m *ChangeBootRes) XXX_Size() int {
	return xxx_messageInfo_ChangeBootRes.Size(m)
}
func (m *ChangeBootRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeBootRes.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeBootRes proto.InternalMessageInfo

func (m *ChangeBootRes) GetBoot() int64 {
	if m != nil {
		return m.Boot
	}
	return 0
}

type CancelRoundData struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelRoundData) Reset()         { *m = CancelRoundData{} }
func (m *CancelRoundData) String() string { return proto.CompactTextString(m) }
func (*CancelRoundData) ProtoMessage()    {}
func (*CancelRoundData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{13}
}
func (m *CancelRoundData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelRoundData.Unmarshal(m, b)
}
func (m *CancelRoundData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelRoundData.Marshal(b, m, deterministic)
}
func (dst *CancelRoundData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelRoundData.Merge(dst, src)
}
func (m *CancelRoundData) XXX_Size() int {
	return xxx_messageInfo_CancelRoundData.Size(m)
}
func (m *CancelRoundData) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelRoundData.DiscardUnknown(m)
}

var xxx_messageInfo_CancelRoundData proto.InternalMessageInfo

func (m *CancelRoundData) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *CancelRoundData) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

// baccarat
type RoundProcess0Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Owner                int32    `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Poker                int32    `protobuf:"varint,4,opt,name=poker,proto3" json:"poker,omitempty"`
	Index                int32    `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundProcess0Data) Reset()         { *m = RoundProcess0Data{} }
func (m *RoundProcess0Data) String() string { return proto.CompactTextString(m) }
func (*RoundProcess0Data) ProtoMessage()    {}
func (*RoundProcess0Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{14}
}
func (m *RoundProcess0Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundProcess0Data.Unmarshal(m, b)
}
func (m *RoundProcess0Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundProcess0Data.Marshal(b, m, deterministic)
}
func (dst *RoundProcess0Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundProcess0Data.Merge(dst, src)
}
func (m *RoundProcess0Data) XXX_Size() int {
	return xxx_messageInfo_RoundProcess0Data.Size(m)
}
func (m *RoundProcess0Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundProcess0Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoundProcess0Data proto.InternalMessageInfo

func (m *RoundProcess0Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoundProcess0Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundProcess0Data) GetOwner() int32 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *RoundProcess0Data) GetPoker() int32 {
	if m != nil {
		return m.Poker
	}
	return 0
}

func (m *RoundProcess0Data) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type RoundResultType0Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Result               int32    `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	BankerPair           int32    `protobuf:"varint,4,opt,name=bankerPair,proto3" json:"bankerPair,omitempty"`
	PlayerPair           int32    `protobuf:"varint,5,opt,name=playerPair,proto3" json:"playerPair,omitempty"`
	BigSmall             int32    `protobuf:"varint,6,opt,name=bigSmall,proto3" json:"bigSmall,omitempty"`
	AnyPair              int32    `protobuf:"varint,7,opt,name=anyPair,proto3" json:"anyPair,omitempty"`
	PerfectPair          int32    `protobuf:"varint,8,opt,name=perfectPair,proto3" json:"perfectPair,omitempty"`
	SuperSix             int32    `protobuf:"varint,9,opt,name=superSix,proto3" json:"superSix,omitempty"`
	BankerPoint          int32    `protobuf:"varint,10,opt,name=bankerPoint,proto3" json:"bankerPoint,omitempty"`
	PlayerPoint          int32    `protobuf:"varint,11,opt,name=playerPoint,proto3" json:"playerPoint,omitempty"`
	BankerPoker          []int32  `protobuf:"varint,12,rep,packed,name=bankerPoker,proto3" json:"bankerPoker,omitempty"`
	PlayerPoker          []int32  `protobuf:"varint,13,rep,packed,name=playerPoker,proto3" json:"playerPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundResultType0Data) Reset()         { *m = RoundResultType0Data{} }
func (m *RoundResultType0Data) String() string { return proto.CompactTextString(m) }
func (*RoundResultType0Data) ProtoMessage()    {}
func (*RoundResultType0Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{15}
}
func (m *RoundResultType0Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundResultType0Data.Unmarshal(m, b)
}
func (m *RoundResultType0Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundResultType0Data.Marshal(b, m, deterministic)
}
func (dst *RoundResultType0Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundResultType0Data.Merge(dst, src)
}
func (m *RoundResultType0Data) XXX_Size() int {
	return xxx_messageInfo_RoundResultType0Data.Size(m)
}
func (m *RoundResultType0Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundResultType0Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoundResultType0Data proto.InternalMessageInfo

func (m *RoundResultType0Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoundResultType0Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundResultType0Data) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *RoundResultType0Data) GetBankerPair() int32 {
	if m != nil {
		return m.BankerPair
	}
	return 0
}

func (m *RoundResultType0Data) GetPlayerPair() int32 {
	if m != nil {
		return m.PlayerPair
	}
	return 0
}

func (m *RoundResultType0Data) GetBigSmall() int32 {
	if m != nil {
		return m.BigSmall
	}
	return 0
}

func (m *RoundResultType0Data) GetAnyPair() int32 {
	if m != nil {
		return m.AnyPair
	}
	return 0
}

func (m *RoundResultType0Data) GetPerfectPair() int32 {
	if m != nil {
		return m.PerfectPair
	}
	return 0
}

func (m *RoundResultType0Data) GetSuperSix() int32 {
	if m != nil {
		return m.SuperSix
	}
	return 0
}

func (m *RoundResultType0Data) GetBankerPoint() int32 {
	if m != nil {
		return m.BankerPoint
	}
	return 0
}

func (m *RoundResultType0Data) GetPlayerPoint() int32 {
	if m != nil {
		return m.PlayerPoint
	}
	return 0
}

func (m *RoundResultType0Data) GetBankerPoker() []int32 {
	if m != nil {
		return m.BankerPoker
	}
	return nil
}

func (m *RoundResultType0Data) GetPlayerPoker() []int32 {
	if m != nil {
		return m.PlayerPoker
	}
	return nil
}

type UpdateResultType0Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Result               int32    `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	BankerPair           int32    `protobuf:"varint,4,opt,name=bankerPair,proto3" json:"bankerPair,omitempty"`
	PlayerPair           int32    `protobuf:"varint,5,opt,name=playerPair,proto3" json:"playerPair,omitempty"`
	BigSmall             int32    `protobuf:"varint,6,opt,name=bigSmall,proto3" json:"bigSmall,omitempty"`
	AnyPair              int32    `protobuf:"varint,7,opt,name=anyPair,proto3" json:"anyPair,omitempty"`
	PerfectPair          int32    `protobuf:"varint,8,opt,name=perfectPair,proto3" json:"perfectPair,omitempty"`
	SuperSix             int32    `protobuf:"varint,9,opt,name=superSix,proto3" json:"superSix,omitempty"`
	BankerPoint          int32    `protobuf:"varint,10,opt,name=bankerPoint,proto3" json:"bankerPoint,omitempty"`
	PlayerPoint          int32    `protobuf:"varint,11,opt,name=playerPoint,proto3" json:"playerPoint,omitempty"`
	BankerPoker          []int32  `protobuf:"varint,12,rep,packed,name=bankerPoker,proto3" json:"bankerPoker,omitempty"`
	PlayerPoker          []int32  `protobuf:"varint,13,rep,packed,name=playerPoker,proto3" json:"playerPoker,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResultType0Data) Reset()         { *m = UpdateResultType0Data{} }
func (m *UpdateResultType0Data) String() string { return proto.CompactTextString(m) }
func (*UpdateResultType0Data) ProtoMessage()    {}
func (*UpdateResultType0Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{16}
}
func (m *UpdateResultType0Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResultType0Data.Unmarshal(m, b)
}
func (m *UpdateResultType0Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResultType0Data.Marshal(b, m, deterministic)
}
func (dst *UpdateResultType0Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResultType0Data.Merge(dst, src)
}
func (m *UpdateResultType0Data) XXX_Size() int {
	return xxx_messageInfo_UpdateResultType0Data.Size(m)
}
func (m *UpdateResultType0Data) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResultType0Data.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResultType0Data proto.InternalMessageInfo

func (m *UpdateResultType0Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *UpdateResultType0Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *UpdateResultType0Data) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *UpdateResultType0Data) GetBankerPair() int32 {
	if m != nil {
		return m.BankerPair
	}
	return 0
}

func (m *UpdateResultType0Data) GetPlayerPair() int32 {
	if m != nil {
		return m.PlayerPair
	}
	return 0
}

func (m *UpdateResultType0Data) GetBigSmall() int32 {
	if m != nil {
		return m.BigSmall
	}
	return 0
}

func (m *UpdateResultType0Data) GetAnyPair() int32 {
	if m != nil {
		return m.AnyPair
	}
	return 0
}

func (m *UpdateResultType0Data) GetPerfectPair() int32 {
	if m != nil {
		return m.PerfectPair
	}
	return 0
}

func (m *UpdateResultType0Data) GetSuperSix() int32 {
	if m != nil {
		return m.SuperSix
	}
	return 0
}

func (m *UpdateResultType0Data) GetBankerPoint() int32 {
	if m != nil {
		return m.BankerPoint
	}
	return 0
}

func (m *UpdateResultType0Data) GetPlayerPoint() int32 {
	if m != nil {
		return m.PlayerPoint
	}
	return 0
}

func (m *UpdateResultType0Data) GetBankerPoker() []int32 {
	if m != nil {
		return m.BankerPoker
	}
	return nil
}

func (m *UpdateResultType0Data) GetPlayerPoker() []int32 {
	if m != nil {
		return m.PlayerPoker
	}
	return nil
}

type HistoryResultType0Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType0Data) Reset()         { *m = HistoryResultType0Data{} }
func (m *HistoryResultType0Data) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType0Data) ProtoMessage()    {}
func (*HistoryResultType0Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{17}
}
func (m *HistoryResultType0Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType0Data.Unmarshal(m, b)
}
func (m *HistoryResultType0Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType0Data.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType0Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType0Data.Merge(dst, src)
}
func (m *HistoryResultType0Data) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType0Data.Size(m)
}
func (m *HistoryResultType0Data) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType0Data.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType0Data proto.InternalMessageInfo

func (m *HistoryResultType0Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type HistoryResultType0Res struct {
	Result               []*HistoryResultType0ResInnerType `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *HistoryResultType0Res) Reset()         { *m = HistoryResultType0Res{} }
func (m *HistoryResultType0Res) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType0Res) ProtoMessage()    {}
func (*HistoryResultType0Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{18}
}
func (m *HistoryResultType0Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType0Res.Unmarshal(m, b)
}
func (m *HistoryResultType0Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType0Res.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType0Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType0Res.Merge(dst, src)
}
func (m *HistoryResultType0Res) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType0Res.Size(m)
}
func (m *HistoryResultType0Res) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType0Res.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType0Res proto.InternalMessageInfo

func (m *HistoryResultType0Res) GetResult() []*HistoryResultType0ResInnerType {
	if m != nil {
		return m.Result
	}
	return nil
}

type HistoryResultType0ResInnerType struct {
	Result               []int32  `protobuf:"varint,1,rep,packed,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType0ResInnerType) Reset()         { *m = HistoryResultType0ResInnerType{} }
func (m *HistoryResultType0ResInnerType) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType0ResInnerType) ProtoMessage()    {}
func (*HistoryResultType0ResInnerType) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{19}
}
func (m *HistoryResultType0ResInnerType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType0ResInnerType.Unmarshal(m, b)
}
func (m *HistoryResultType0ResInnerType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType0ResInnerType.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType0ResInnerType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType0ResInnerType.Merge(dst, src)
}
func (m *HistoryResultType0ResInnerType) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType0ResInnerType.Size(m)
}
func (m *HistoryResultType0ResInnerType) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType0ResInnerType.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType0ResInnerType proto.InternalMessageInfo

func (m *HistoryResultType0ResInnerType) GetResult() []int32 {
	if m != nil {
		return m.Result
	}
	return nil
}

// dragonTiger
type RoundProcess1Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Owner                int32    `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Poker                int32    `protobuf:"varint,4,opt,name=poker,proto3" json:"poker,omitempty"`
	Index                int32    `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundProcess1Data) Reset()         { *m = RoundProcess1Data{} }
func (m *RoundProcess1Data) String() string { return proto.CompactTextString(m) }
func (*RoundProcess1Data) ProtoMessage()    {}
func (*RoundProcess1Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{20}
}
func (m *RoundProcess1Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundProcess1Data.Unmarshal(m, b)
}
func (m *RoundProcess1Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundProcess1Data.Marshal(b, m, deterministic)
}
func (dst *RoundProcess1Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundProcess1Data.Merge(dst, src)
}
func (m *RoundProcess1Data) XXX_Size() int {
	return xxx_messageInfo_RoundProcess1Data.Size(m)
}
func (m *RoundProcess1Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundProcess1Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoundProcess1Data proto.InternalMessageInfo

func (m *RoundProcess1Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoundProcess1Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundProcess1Data) GetOwner() int32 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *RoundProcess1Data) GetPoker() int32 {
	if m != nil {
		return m.Poker
	}
	return 0
}

func (m *RoundProcess1Data) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type RoundResultType1Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Result               int32    `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	DragonPoker          int32    `protobuf:"varint,4,opt,name=dragonPoker,proto3" json:"dragonPoker,omitempty"`
	TigerPoker           int32    `protobuf:"varint,5,opt,name=tigerPoker,proto3" json:"tigerPoker,omitempty"`
	DragonOddEven        int32    `protobuf:"varint,6,opt,name=dragonOddEven,proto3" json:"dragonOddEven,omitempty"`
	DragonRedBlack       int32    `protobuf:"varint,7,opt,name=dragonRedBlack,proto3" json:"dragonRedBlack,omitempty"`
	TigerOddEven         int32    `protobuf:"varint,8,opt,name=tigerOddEven,proto3" json:"tigerOddEven,omitempty"`
	TigerRedBlack        int32    `protobuf:"varint,9,opt,name=tigerRedBlack,proto3" json:"tigerRedBlack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundResultType1Data) Reset()         { *m = RoundResultType1Data{} }
func (m *RoundResultType1Data) String() string { return proto.CompactTextString(m) }
func (*RoundResultType1Data) ProtoMessage()    {}
func (*RoundResultType1Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{21}
}
func (m *RoundResultType1Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundResultType1Data.Unmarshal(m, b)
}
func (m *RoundResultType1Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundResultType1Data.Marshal(b, m, deterministic)
}
func (dst *RoundResultType1Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundResultType1Data.Merge(dst, src)
}
func (m *RoundResultType1Data) XXX_Size() int {
	return xxx_messageInfo_RoundResultType1Data.Size(m)
}
func (m *RoundResultType1Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundResultType1Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoundResultType1Data proto.InternalMessageInfo

func (m *RoundResultType1Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoundResultType1Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundResultType1Data) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *RoundResultType1Data) GetDragonPoker() int32 {
	if m != nil {
		return m.DragonPoker
	}
	return 0
}

func (m *RoundResultType1Data) GetTigerPoker() int32 {
	if m != nil {
		return m.TigerPoker
	}
	return 0
}

func (m *RoundResultType1Data) GetDragonOddEven() int32 {
	if m != nil {
		return m.DragonOddEven
	}
	return 0
}

func (m *RoundResultType1Data) GetDragonRedBlack() int32 {
	if m != nil {
		return m.DragonRedBlack
	}
	return 0
}

func (m *RoundResultType1Data) GetTigerOddEven() int32 {
	if m != nil {
		return m.TigerOddEven
	}
	return 0
}

func (m *RoundResultType1Data) GetTigerRedBlack() int32 {
	if m != nil {
		return m.TigerRedBlack
	}
	return 0
}

type UpdateResultType1Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Result               int32    `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	DragonPoker          int32    `protobuf:"varint,4,opt,name=dragonPoker,proto3" json:"dragonPoker,omitempty"`
	TigerPoker           int32    `protobuf:"varint,5,opt,name=tigerPoker,proto3" json:"tigerPoker,omitempty"`
	DragonOddEven        int32    `protobuf:"varint,6,opt,name=dragonOddEven,proto3" json:"dragonOddEven,omitempty"`
	DragonRedBlack       int32    `protobuf:"varint,7,opt,name=dragonRedBlack,proto3" json:"dragonRedBlack,omitempty"`
	TigerOddEven         int32    `protobuf:"varint,8,opt,name=tigerOddEven,proto3" json:"tigerOddEven,omitempty"`
	TigerRedBlack        int32    `protobuf:"varint,9,opt,name=tigerRedBlack,proto3" json:"tigerRedBlack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResultType1Data) Reset()         { *m = UpdateResultType1Data{} }
func (m *UpdateResultType1Data) String() string { return proto.CompactTextString(m) }
func (*UpdateResultType1Data) ProtoMessage()    {}
func (*UpdateResultType1Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{22}
}
func (m *UpdateResultType1Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResultType1Data.Unmarshal(m, b)
}
func (m *UpdateResultType1Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResultType1Data.Marshal(b, m, deterministic)
}
func (dst *UpdateResultType1Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResultType1Data.Merge(dst, src)
}
func (m *UpdateResultType1Data) XXX_Size() int {
	return xxx_messageInfo_UpdateResultType1Data.Size(m)
}
func (m *UpdateResultType1Data) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResultType1Data.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResultType1Data proto.InternalMessageInfo

func (m *UpdateResultType1Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *UpdateResultType1Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *UpdateResultType1Data) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *UpdateResultType1Data) GetDragonPoker() int32 {
	if m != nil {
		return m.DragonPoker
	}
	return 0
}

func (m *UpdateResultType1Data) GetTigerPoker() int32 {
	if m != nil {
		return m.TigerPoker
	}
	return 0
}

func (m *UpdateResultType1Data) GetDragonOddEven() int32 {
	if m != nil {
		return m.DragonOddEven
	}
	return 0
}

func (m *UpdateResultType1Data) GetDragonRedBlack() int32 {
	if m != nil {
		return m.DragonRedBlack
	}
	return 0
}

func (m *UpdateResultType1Data) GetTigerOddEven() int32 {
	if m != nil {
		return m.TigerOddEven
	}
	return 0
}

func (m *UpdateResultType1Data) GetTigerRedBlack() int32 {
	if m != nil {
		return m.TigerRedBlack
	}
	return 0
}

type HistoryResultType1Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType1Data) Reset()         { *m = HistoryResultType1Data{} }
func (m *HistoryResultType1Data) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType1Data) ProtoMessage()    {}
func (*HistoryResultType1Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{23}
}
func (m *HistoryResultType1Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType1Data.Unmarshal(m, b)
}
func (m *HistoryResultType1Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType1Data.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType1Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType1Data.Merge(dst, src)
}
func (m *HistoryResultType1Data) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType1Data.Size(m)
}
func (m *HistoryResultType1Data) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType1Data.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType1Data proto.InternalMessageInfo

func (m *HistoryResultType1Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type HistoryResultType1Res struct {
	Result               []int32  `protobuf:"varint,1,rep,packed,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType1Res) Reset()         { *m = HistoryResultType1Res{} }
func (m *HistoryResultType1Res) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType1Res) ProtoMessage()    {}
func (*HistoryResultType1Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{24}
}
func (m *HistoryResultType1Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType1Res.Unmarshal(m, b)
}
func (m *HistoryResultType1Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType1Res.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType1Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType1Res.Merge(dst, src)
}
func (m *HistoryResultType1Res) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType1Res.Size(m)
}
func (m *HistoryResultType1Res) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType1Res.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType1Res proto.InternalMessageInfo

func (m *HistoryResultType1Res) GetResult() []int32 {
	if m != nil {
		return m.Result
	}
	return nil
}

// niuniu  type2
type RoundProcess2Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Owner                int32    `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Poker                int32    `protobuf:"varint,4,opt,name=poker,proto3" json:"poker,omitempty"`
	Index                int32    `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundProcess2Data) Reset()         { *m = RoundProcess2Data{} }
func (m *RoundProcess2Data) String() string { return proto.CompactTextString(m) }
func (*RoundProcess2Data) ProtoMessage()    {}
func (*RoundProcess2Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{25}
}
func (m *RoundProcess2Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundProcess2Data.Unmarshal(m, b)
}
func (m *RoundProcess2Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundProcess2Data.Marshal(b, m, deterministic)
}
func (dst *RoundProcess2Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundProcess2Data.Merge(dst, src)
}
func (m *RoundProcess2Data) XXX_Size() int {
	return xxx_messageInfo_RoundProcess2Data.Size(m)
}
func (m *RoundProcess2Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundProcess2Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoundProcess2Data proto.InternalMessageInfo

func (m *RoundProcess2Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoundProcess2Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundProcess2Data) GetOwner() int32 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *RoundProcess2Data) GetPoker() int32 {
	if m != nil {
		return m.Poker
	}
	return 0
}

func (m *RoundProcess2Data) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type RoundResultType2Data struct {
	RoomID               int32                  `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64                  `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Head                 int32                  `protobuf:"varint,3,opt,name=head,proto3" json:"head,omitempty"`
	Owner0               *RoundResultType2Owner `protobuf:"bytes,4,opt,name=owner0,proto3" json:"owner0,omitempty"`
	Owner1               *RoundResultType2Owner `protobuf:"bytes,5,opt,name=owner1,proto3" json:"owner1,omitempty"`
	Owner2               *RoundResultType2Owner `protobuf:"bytes,6,opt,name=owner2,proto3" json:"owner2,omitempty"`
	Owner3               *RoundResultType2Owner `protobuf:"bytes,7,opt,name=owner3,proto3" json:"owner3,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RoundResultType2Data) Reset()         { *m = RoundResultType2Data{} }
func (m *RoundResultType2Data) String() string { return proto.CompactTextString(m) }
func (*RoundResultType2Data) ProtoMessage()    {}
func (*RoundResultType2Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{26}
}
func (m *RoundResultType2Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundResultType2Data.Unmarshal(m, b)
}
func (m *RoundResultType2Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundResultType2Data.Marshal(b, m, deterministic)
}
func (dst *RoundResultType2Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundResultType2Data.Merge(dst, src)
}
func (m *RoundResultType2Data) XXX_Size() int {
	return xxx_messageInfo_RoundResultType2Data.Size(m)
}
func (m *RoundResultType2Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundResultType2Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoundResultType2Data proto.InternalMessageInfo

func (m *RoundResultType2Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoundResultType2Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundResultType2Data) GetHead() int32 {
	if m != nil {
		return m.Head
	}
	return 0
}

func (m *RoundResultType2Data) GetOwner0() *RoundResultType2Owner {
	if m != nil {
		return m.Owner0
	}
	return nil
}

func (m *RoundResultType2Data) GetOwner1() *RoundResultType2Owner {
	if m != nil {
		return m.Owner1
	}
	return nil
}

func (m *RoundResultType2Data) GetOwner2() *RoundResultType2Owner {
	if m != nil {
		return m.Owner2
	}
	return nil
}

func (m *RoundResultType2Data) GetOwner3() *RoundResultType2Owner {
	if m != nil {
		return m.Owner3
	}
	return nil
}

type RoundResultType2Owner struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Poker                []int32  `protobuf:"varint,2,rep,packed,name=poker,proto3" json:"poker,omitempty"`
	Pattern              int32    `protobuf:"varint,3,opt,name=pattern,proto3" json:"pattern,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundResultType2Owner) Reset()         { *m = RoundResultType2Owner{} }
func (m *RoundResultType2Owner) String() string { return proto.CompactTextString(m) }
func (*RoundResultType2Owner) ProtoMessage()    {}
func (*RoundResultType2Owner) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{27}
}
func (m *RoundResultType2Owner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundResultType2Owner.Unmarshal(m, b)
}
func (m *RoundResultType2Owner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundResultType2Owner.Marshal(b, m, deterministic)
}
func (dst *RoundResultType2Owner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundResultType2Owner.Merge(dst, src)
}
func (m *RoundResultType2Owner) XXX_Size() int {
	return xxx_messageInfo_RoundResultType2Owner.Size(m)
}
func (m *RoundResultType2Owner) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundResultType2Owner.DiscardUnknown(m)
}

var xxx_messageInfo_RoundResultType2Owner proto.InternalMessageInfo

func (m *RoundResultType2Owner) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *RoundResultType2Owner) GetPoker() []int32 {
	if m != nil {
		return m.Poker
	}
	return nil
}

func (m *RoundResultType2Owner) GetPattern() int32 {
	if m != nil {
		return m.Pattern
	}
	return 0
}

type UpdateResultType2Data struct {
	RoomID               int32                  `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64                  `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Head                 int32                  `protobuf:"varint,3,opt,name=head,proto3" json:"head,omitempty"`
	Owner0               *RoundResultType2Owner `protobuf:"bytes,4,opt,name=owner0,proto3" json:"owner0,omitempty"`
	Owner1               *RoundResultType2Owner `protobuf:"bytes,5,opt,name=owner1,proto3" json:"owner1,omitempty"`
	Owner2               *RoundResultType2Owner `protobuf:"bytes,6,opt,name=owner2,proto3" json:"owner2,omitempty"`
	Owner3               *RoundResultType2Owner `protobuf:"bytes,7,opt,name=owner3,proto3" json:"owner3,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateResultType2Data) Reset()         { *m = UpdateResultType2Data{} }
func (m *UpdateResultType2Data) String() string { return proto.CompactTextString(m) }
func (*UpdateResultType2Data) ProtoMessage()    {}
func (*UpdateResultType2Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{28}
}
func (m *UpdateResultType2Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResultType2Data.Unmarshal(m, b)
}
func (m *UpdateResultType2Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResultType2Data.Marshal(b, m, deterministic)
}
func (dst *UpdateResultType2Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResultType2Data.Merge(dst, src)
}
func (m *UpdateResultType2Data) XXX_Size() int {
	return xxx_messageInfo_UpdateResultType2Data.Size(m)
}
func (m *UpdateResultType2Data) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResultType2Data.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResultType2Data proto.InternalMessageInfo

func (m *UpdateResultType2Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *UpdateResultType2Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *UpdateResultType2Data) GetHead() int32 {
	if m != nil {
		return m.Head
	}
	return 0
}

func (m *UpdateResultType2Data) GetOwner0() *RoundResultType2Owner {
	if m != nil {
		return m.Owner0
	}
	return nil
}

func (m *UpdateResultType2Data) GetOwner1() *RoundResultType2Owner {
	if m != nil {
		return m.Owner1
	}
	return nil
}

func (m *UpdateResultType2Data) GetOwner2() *RoundResultType2Owner {
	if m != nil {
		return m.Owner2
	}
	return nil
}

func (m *UpdateResultType2Data) GetOwner3() *RoundResultType2Owner {
	if m != nil {
		return m.Owner3
	}
	return nil
}

type HistoryResultType2Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType2Data) Reset()         { *m = HistoryResultType2Data{} }
func (m *HistoryResultType2Data) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType2Data) ProtoMessage()    {}
func (*HistoryResultType2Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{29}
}
func (m *HistoryResultType2Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType2Data.Unmarshal(m, b)
}
func (m *HistoryResultType2Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType2Data.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType2Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType2Data.Merge(dst, src)
}
func (m *HistoryResultType2Data) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType2Data.Size(m)
}
func (m *HistoryResultType2Data) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType2Data.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType2Data proto.InternalMessageInfo

func (m *HistoryResultType2Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type HistoryResultType2Res struct {
	Result               []*HistoryResultType2ResInnerType `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *HistoryResultType2Res) Reset()         { *m = HistoryResultType2Res{} }
func (m *HistoryResultType2Res) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType2Res) ProtoMessage()    {}
func (*HistoryResultType2Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{30}
}
func (m *HistoryResultType2Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType2Res.Unmarshal(m, b)
}
func (m *HistoryResultType2Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType2Res.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType2Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType2Res.Merge(dst, src)
}
func (m *HistoryResultType2Res) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType2Res.Size(m)
}
func (m *HistoryResultType2Res) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType2Res.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType2Res proto.InternalMessageInfo

func (m *HistoryResultType2Res) GetResult() []*HistoryResultType2ResInnerType {
	if m != nil {
		return m.Result
	}
	return nil
}

type HistoryResultType2ResInnerType struct {
	Result               []int32  `protobuf:"varint,1,rep,packed,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType2ResInnerType) Reset()         { *m = HistoryResultType2ResInnerType{} }
func (m *HistoryResultType2ResInnerType) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType2ResInnerType) ProtoMessage()    {}
func (*HistoryResultType2ResInnerType) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{31}
}
func (m *HistoryResultType2ResInnerType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType2ResInnerType.Unmarshal(m, b)
}
func (m *HistoryResultType2ResInnerType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType2ResInnerType.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType2ResInnerType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType2ResInnerType.Merge(dst, src)
}
func (m *HistoryResultType2ResInnerType) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType2ResInnerType.Size(m)
}
func (m *HistoryResultType2ResInnerType) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType2ResInnerType.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType2ResInnerType proto.InternalMessageInfo

func (m *HistoryResultType2ResInnerType) GetResult() []int32 {
	if m != nil {
		return m.Result
	}
	return nil
}

// sicbo type6
type RoundResultType6Data struct {
	RoomID               int32                            `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64                            `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Dice                 []int32                          `protobuf:"varint,3,rep,packed,name=dice,proto3" json:"dice,omitempty"`
	Sum                  int32                            `protobuf:"varint,4,opt,name=sum,proto3" json:"sum,omitempty"`
	BigSmall             int32                            `protobuf:"varint,5,opt,name=bigSmall,proto3" json:"bigSmall,omitempty"`
	OddEven              int32                            `protobuf:"varint,6,opt,name=oddEven,proto3" json:"oddEven,omitempty"`
	Triple               int32                            `protobuf:"varint,7,opt,name=triple,proto3" json:"triple,omitempty"`
	Pair                 int32                            `protobuf:"varint,8,opt,name=pair,proto3" json:"pair,omitempty"`
	Paigow               []*RoundResultType6DataInnerType `protobuf:"bytes,9,rep,name=paigow,proto3" json:"paigow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *RoundResultType6Data) Reset()         { *m = RoundResultType6Data{} }
func (m *RoundResultType6Data) String() string { return proto.CompactTextString(m) }
func (*RoundResultType6Data) ProtoMessage()    {}
func (*RoundResultType6Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{32}
}
func (m *RoundResultType6Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundResultType6Data.Unmarshal(m, b)
}
func (m *RoundResultType6Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundResultType6Data.Marshal(b, m, deterministic)
}
func (dst *RoundResultType6Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundResultType6Data.Merge(dst, src)
}
func (m *RoundResultType6Data) XXX_Size() int {
	return xxx_messageInfo_RoundResultType6Data.Size(m)
}
func (m *RoundResultType6Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundResultType6Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoundResultType6Data proto.InternalMessageInfo

func (m *RoundResultType6Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoundResultType6Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundResultType6Data) GetDice() []int32 {
	if m != nil {
		return m.Dice
	}
	return nil
}

func (m *RoundResultType6Data) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *RoundResultType6Data) GetBigSmall() int32 {
	if m != nil {
		return m.BigSmall
	}
	return 0
}

func (m *RoundResultType6Data) GetOddEven() int32 {
	if m != nil {
		return m.OddEven
	}
	return 0
}

func (m *RoundResultType6Data) GetTriple() int32 {
	if m != nil {
		return m.Triple
	}
	return 0
}

func (m *RoundResultType6Data) GetPair() int32 {
	if m != nil {
		return m.Pair
	}
	return 0
}

func (m *RoundResultType6Data) GetPaigow() []*RoundResultType6DataInnerType {
	if m != nil {
		return m.Paigow
	}
	return nil
}

type RoundResultType6DataInnerType struct {
	Result               []int32  `protobuf:"varint,1,rep,packed,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundResultType6DataInnerType) Reset()         { *m = RoundResultType6DataInnerType{} }
func (m *RoundResultType6DataInnerType) String() string { return proto.CompactTextString(m) }
func (*RoundResultType6DataInnerType) ProtoMessage()    {}
func (*RoundResultType6DataInnerType) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{33}
}
func (m *RoundResultType6DataInnerType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundResultType6DataInnerType.Unmarshal(m, b)
}
func (m *RoundResultType6DataInnerType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundResultType6DataInnerType.Marshal(b, m, deterministic)
}
func (dst *RoundResultType6DataInnerType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundResultType6DataInnerType.Merge(dst, src)
}
func (m *RoundResultType6DataInnerType) XXX_Size() int {
	return xxx_messageInfo_RoundResultType6DataInnerType.Size(m)
}
func (m *RoundResultType6DataInnerType) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundResultType6DataInnerType.DiscardUnknown(m)
}

var xxx_messageInfo_RoundResultType6DataInnerType proto.InternalMessageInfo

func (m *RoundResultType6DataInnerType) GetResult() []int32 {
	if m != nil {
		return m.Result
	}
	return nil
}

type UpdateResultType6Data struct {
	RoomID               int32                            `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64                            `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Dice                 []int32                          `protobuf:"varint,3,rep,packed,name=dice,proto3" json:"dice,omitempty"`
	Sum                  int32                            `protobuf:"varint,4,opt,name=sum,proto3" json:"sum,omitempty"`
	BigSmall             int32                            `protobuf:"varint,5,opt,name=bigSmall,proto3" json:"bigSmall,omitempty"`
	OddEven              int32                            `protobuf:"varint,6,opt,name=oddEven,proto3" json:"oddEven,omitempty"`
	Triple               int32                            `protobuf:"varint,7,opt,name=triple,proto3" json:"triple,omitempty"`
	Pair                 int32                            `protobuf:"varint,8,opt,name=pair,proto3" json:"pair,omitempty"`
	Paigow               []*RoundResultType6DataInnerType `protobuf:"bytes,9,rep,name=paigow,proto3" json:"paigow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *UpdateResultType6Data) Reset()         { *m = UpdateResultType6Data{} }
func (m *UpdateResultType6Data) String() string { return proto.CompactTextString(m) }
func (*UpdateResultType6Data) ProtoMessage()    {}
func (*UpdateResultType6Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{34}
}
func (m *UpdateResultType6Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResultType6Data.Unmarshal(m, b)
}
func (m *UpdateResultType6Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResultType6Data.Marshal(b, m, deterministic)
}
func (dst *UpdateResultType6Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResultType6Data.Merge(dst, src)
}
func (m *UpdateResultType6Data) XXX_Size() int {
	return xxx_messageInfo_UpdateResultType6Data.Size(m)
}
func (m *UpdateResultType6Data) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResultType6Data.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResultType6Data proto.InternalMessageInfo

func (m *UpdateResultType6Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *UpdateResultType6Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *UpdateResultType6Data) GetDice() []int32 {
	if m != nil {
		return m.Dice
	}
	return nil
}

func (m *UpdateResultType6Data) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *UpdateResultType6Data) GetBigSmall() int32 {
	if m != nil {
		return m.BigSmall
	}
	return 0
}

func (m *UpdateResultType6Data) GetOddEven() int32 {
	if m != nil {
		return m.OddEven
	}
	return 0
}

func (m *UpdateResultType6Data) GetTriple() int32 {
	if m != nil {
		return m.Triple
	}
	return 0
}

func (m *UpdateResultType6Data) GetPair() int32 {
	if m != nil {
		return m.Pair
	}
	return 0
}

func (m *UpdateResultType6Data) GetPaigow() []*RoundResultType6DataInnerType {
	if m != nil {
		return m.Paigow
	}
	return nil
}

type HistoryResultType6Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType6Data) Reset()         { *m = HistoryResultType6Data{} }
func (m *HistoryResultType6Data) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType6Data) ProtoMessage()    {}
func (*HistoryResultType6Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{35}
}
func (m *HistoryResultType6Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType6Data.Unmarshal(m, b)
}
func (m *HistoryResultType6Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType6Data.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType6Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType6Data.Merge(dst, src)
}
func (m *HistoryResultType6Data) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType6Data.Size(m)
}
func (m *HistoryResultType6Data) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType6Data.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType6Data proto.InternalMessageInfo

func (m *HistoryResultType6Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type HistoryResultType6Res struct {
	Result               []int32  `protobuf:"varint,1,rep,packed,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType6Res) Reset()         { *m = HistoryResultType6Res{} }
func (m *HistoryResultType6Res) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType6Res) ProtoMessage()    {}
func (*HistoryResultType6Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{36}
}
func (m *HistoryResultType6Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType6Res.Unmarshal(m, b)
}
func (m *HistoryResultType6Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType6Res.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType6Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType6Res.Merge(dst, src)
}
func (m *HistoryResultType6Res) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType6Res.Size(m)
}
func (m *HistoryResultType6Res) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType6Res.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType6Res proto.InternalMessageInfo

func (m *HistoryResultType6Res) GetResult() []int32 {
	if m != nil {
		return m.Result
	}
	return nil
}

type RerollDiceData struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RerollDiceData) Reset()         { *m = RerollDiceData{} }
func (m *RerollDiceData) String() string { return proto.CompactTextString(m) }
func (*RerollDiceData) ProtoMessage()    {}
func (*RerollDiceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{37}
}
func (m *RerollDiceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RerollDiceData.Unmarshal(m, b)
}
func (m *RerollDiceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RerollDiceData.Marshal(b, m, deterministic)
}
func (dst *RerollDiceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RerollDiceData.Merge(dst, src)
}
func (m *RerollDiceData) XXX_Size() int {
	return xxx_messageInfo_RerollDiceData.Size(m)
}
func (m *RerollDiceData) XXX_DiscardUnknown() {
	xxx_messageInfo_RerollDiceData.DiscardUnknown(m)
}

var xxx_messageInfo_RerollDiceData proto.InternalMessageInfo

func (m *RerollDiceData) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RerollDiceData) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

// rolette  type7
type RoundResultType7Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Result               int32    `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	BigSmall             int32    `protobuf:"varint,4,opt,name=bigSmall,proto3" json:"bigSmall,omitempty"`
	OddEven              int32    `protobuf:"varint,5,opt,name=oddEven,proto3" json:"oddEven,omitempty"`
	RedBlack             int32    `protobuf:"varint,6,opt,name=redBlack,proto3" json:"redBlack,omitempty"`
	Dozen                int32    `protobuf:"varint,7,opt,name=dozen,proto3" json:"dozen,omitempty"`
	Column               int32    `protobuf:"varint,8,opt,name=column,proto3" json:"column,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoundResultType7Data) Reset()         { *m = RoundResultType7Data{} }
func (m *RoundResultType7Data) String() string { return proto.CompactTextString(m) }
func (*RoundResultType7Data) ProtoMessage()    {}
func (*RoundResultType7Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{38}
}
func (m *RoundResultType7Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoundResultType7Data.Unmarshal(m, b)
}
func (m *RoundResultType7Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoundResultType7Data.Marshal(b, m, deterministic)
}
func (dst *RoundResultType7Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoundResultType7Data.Merge(dst, src)
}
func (m *RoundResultType7Data) XXX_Size() int {
	return xxx_messageInfo_RoundResultType7Data.Size(m)
}
func (m *RoundResultType7Data) XXX_DiscardUnknown() {
	xxx_messageInfo_RoundResultType7Data.DiscardUnknown(m)
}

var xxx_messageInfo_RoundResultType7Data proto.InternalMessageInfo

func (m *RoundResultType7Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RoundResultType7Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *RoundResultType7Data) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *RoundResultType7Data) GetBigSmall() int32 {
	if m != nil {
		return m.BigSmall
	}
	return 0
}

func (m *RoundResultType7Data) GetOddEven() int32 {
	if m != nil {
		return m.OddEven
	}
	return 0
}

func (m *RoundResultType7Data) GetRedBlack() int32 {
	if m != nil {
		return m.RedBlack
	}
	return 0
}

func (m *RoundResultType7Data) GetDozen() int32 {
	if m != nil {
		return m.Dozen
	}
	return 0
}

func (m *RoundResultType7Data) GetColumn() int32 {
	if m != nil {
		return m.Column
	}
	return 0
}

type UpdateResultType7Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Result               int32    `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	BigSmall             int32    `protobuf:"varint,4,opt,name=bigSmall,proto3" json:"bigSmall,omitempty"`
	OddEven              int32    `protobuf:"varint,5,opt,name=oddEven,proto3" json:"oddEven,omitempty"`
	RedBlack             int32    `protobuf:"varint,6,opt,name=redBlack,proto3" json:"redBlack,omitempty"`
	Dozen                int32    `protobuf:"varint,7,opt,name=dozen,proto3" json:"dozen,omitempty"`
	Column               int32    `protobuf:"varint,8,opt,name=column,proto3" json:"column,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResultType7Data) Reset()         { *m = UpdateResultType7Data{} }
func (m *UpdateResultType7Data) String() string { return proto.CompactTextString(m) }
func (*UpdateResultType7Data) ProtoMessage()    {}
func (*UpdateResultType7Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{39}
}
func (m *UpdateResultType7Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResultType7Data.Unmarshal(m, b)
}
func (m *UpdateResultType7Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResultType7Data.Marshal(b, m, deterministic)
}
func (dst *UpdateResultType7Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResultType7Data.Merge(dst, src)
}
func (m *UpdateResultType7Data) XXX_Size() int {
	return xxx_messageInfo_UpdateResultType7Data.Size(m)
}
func (m *UpdateResultType7Data) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResultType7Data.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResultType7Data proto.InternalMessageInfo

func (m *UpdateResultType7Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *UpdateResultType7Data) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *UpdateResultType7Data) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *UpdateResultType7Data) GetBigSmall() int32 {
	if m != nil {
		return m.BigSmall
	}
	return 0
}

func (m *UpdateResultType7Data) GetOddEven() int32 {
	if m != nil {
		return m.OddEven
	}
	return 0
}

func (m *UpdateResultType7Data) GetRedBlack() int32 {
	if m != nil {
		return m.RedBlack
	}
	return 0
}

func (m *UpdateResultType7Data) GetDozen() int32 {
	if m != nil {
		return m.Dozen
	}
	return 0
}

func (m *UpdateResultType7Data) GetColumn() int32 {
	if m != nil {
		return m.Column
	}
	return 0
}

type HistoryResultType7Data struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType7Data) Reset()         { *m = HistoryResultType7Data{} }
func (m *HistoryResultType7Data) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType7Data) ProtoMessage()    {}
func (*HistoryResultType7Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{40}
}
func (m *HistoryResultType7Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType7Data.Unmarshal(m, b)
}
func (m *HistoryResultType7Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType7Data.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType7Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType7Data.Merge(dst, src)
}
func (m *HistoryResultType7Data) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType7Data.Size(m)
}
func (m *HistoryResultType7Data) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType7Data.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType7Data proto.InternalMessageInfo

func (m *HistoryResultType7Data) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

type HistoryResultType7Res struct {
	Result               []int32  `protobuf:"varint,1,rep,packed,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryResultType7Res) Reset()         { *m = HistoryResultType7Res{} }
func (m *HistoryResultType7Res) String() string { return proto.CompactTextString(m) }
func (*HistoryResultType7Res) ProtoMessage()    {}
func (*HistoryResultType7Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{41}
}
func (m *HistoryResultType7Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResultType7Res.Unmarshal(m, b)
}
func (m *HistoryResultType7Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResultType7Res.Marshal(b, m, deterministic)
}
func (dst *HistoryResultType7Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResultType7Res.Merge(dst, src)
}
func (m *HistoryResultType7Res) XXX_Size() int {
	return xxx_messageInfo_HistoryResultType7Res.Size(m)
}
func (m *HistoryResultType7Res) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResultType7Res.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResultType7Res proto.InternalMessageInfo

func (m *HistoryResultType7Res) GetResult() []int32 {
	if m != nil {
		return m.Result
	}
	return nil
}

type RethrowData struct {
	RoomID               int32    `protobuf:"varint,1,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Round                int64    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RethrowData) Reset()         { *m = RethrowData{} }
func (m *RethrowData) String() string { return proto.CompactTextString(m) }
func (*RethrowData) ProtoMessage()    {}
func (*RethrowData) Descriptor() ([]byte, []int) {
	return fileDescriptor_protobuf_e9954b86430771e1, []int{42}
}
func (m *RethrowData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RethrowData.Unmarshal(m, b)
}
func (m *RethrowData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RethrowData.Marshal(b, m, deterministic)
}
func (dst *RethrowData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RethrowData.Merge(dst, src)
}
func (m *RethrowData) XXX_Size() int {
	return xxx_messageInfo_RethrowData.Size(m)
}
func (m *RethrowData) XXX_DiscardUnknown() {
	xxx_messageInfo_RethrowData.DiscardUnknown(m)
}

var xxx_messageInfo_RethrowData proto.InternalMessageInfo

func (m *RethrowData) GetRoomID() int32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *RethrowData) GetRound() int64 {
	if m != nil {
		return m.Round
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "protobuf.Empty")
	proto.RegisterType((*DealerLoginData)(nil), "protobuf.DealerLoginData")
	proto.RegisterType((*DealerLoginRes)(nil), "protobuf.DealerLoginRes")
	proto.RegisterType((*RoomLoginData)(nil), "protobuf.RoomLoginData")
	proto.RegisterType((*OnlineNotifyData)(nil), "protobuf.OnlineNotifyData")
	proto.RegisterType((*GetRoomInfoData)(nil), "protobuf.GetRoomInfoData")
	proto.RegisterType((*GetRoomInfoRes)(nil), "protobuf.GetRoomInfoRes")
	proto.RegisterType((*WaitingData)(nil), "protobuf.WaitingData")
	proto.RegisterType((*BeginBettingData)(nil), "protobuf.BeginBettingData")
	proto.RegisterType((*BeginBettingRes)(nil), "protobuf.BeginBettingRes")
	proto.RegisterType((*EndBettingData)(nil), "protobuf.EndBettingData")
	proto.RegisterType((*ChangeBootData)(nil), "protobuf.ChangeBootData")
	proto.RegisterType((*ChangeBootRes)(nil), "protobuf.ChangeBootRes")
	proto.RegisterType((*CancelRoundData)(nil), "protobuf.CancelRoundData")
	proto.RegisterType((*RoundProcess0Data)(nil), "protobuf.RoundProcess0Data")
	proto.RegisterType((*RoundResultType0Data)(nil), "protobuf.RoundResultType0Data")
	proto.RegisterType((*UpdateResultType0Data)(nil), "protobuf.UpdateResultType0Data")
	proto.RegisterType((*HistoryResultType0Data)(nil), "protobuf.HistoryResultType0Data")
	proto.RegisterType((*HistoryResultType0Res)(nil), "protobuf.HistoryResultType0Res")
	proto.RegisterType((*HistoryResultType0ResInnerType)(nil), "protobuf.HistoryResultType0ResInnerType")
	proto.RegisterType((*RoundProcess1Data)(nil), "protobuf.RoundProcess1Data")
	proto.RegisterType((*RoundResultType1Data)(nil), "protobuf.RoundResultType1Data")
	proto.RegisterType((*UpdateResultType1Data)(nil), "protobuf.UpdateResultType1Data")
	proto.RegisterType((*HistoryResultType1Data)(nil), "protobuf.HistoryResultType1Data")
	proto.RegisterType((*HistoryResultType1Res)(nil), "protobuf.HistoryResultType1Res")
	proto.RegisterType((*RoundProcess2Data)(nil), "protobuf.RoundProcess2Data")
	proto.RegisterType((*RoundResultType2Data)(nil), "protobuf.RoundResultType2Data")
	proto.RegisterType((*RoundResultType2Owner)(nil), "protobuf.RoundResultType2Owner")
	proto.RegisterType((*UpdateResultType2Data)(nil), "protobuf.UpdateResultType2Data")
	proto.RegisterType((*HistoryResultType2Data)(nil), "protobuf.HistoryResultType2Data")
	proto.RegisterType((*HistoryResultType2Res)(nil), "protobuf.HistoryResultType2Res")
	proto.RegisterType((*HistoryResultType2ResInnerType)(nil), "protobuf.HistoryResultType2ResInnerType")
	proto.RegisterType((*RoundResultType6Data)(nil), "protobuf.RoundResultType6Data")
	proto.RegisterType((*RoundResultType6DataInnerType)(nil), "protobuf.RoundResultType6DataInnerType")
	proto.RegisterType((*UpdateResultType6Data)(nil), "protobuf.UpdateResultType6Data")
	proto.RegisterType((*HistoryResultType6Data)(nil), "protobuf.HistoryResultType6Data")
	proto.RegisterType((*HistoryResultType6Res)(nil), "protobuf.HistoryResultType6Res")
	proto.RegisterType((*RerollDiceData)(nil), "protobuf.RerollDiceData")
	proto.RegisterType((*RoundResultType7Data)(nil), "protobuf.RoundResultType7Data")
	proto.RegisterType((*UpdateResultType7Data)(nil), "protobuf.UpdateResultType7Data")
	proto.RegisterType((*HistoryResultType7Data)(nil), "protobuf.HistoryResultType7Data")
	proto.RegisterType((*HistoryResultType7Res)(nil), "protobuf.HistoryResultType7Res")
	proto.RegisterType((*RethrowData)(nil), "protobuf.RethrowData")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCClient is the client API for RPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCClient interface {
	DealerLogin(ctx context.Context, in *DealerLoginData, opts ...grpc.CallOption) (*DealerLoginRes, error)
	RoomLogin(ctx context.Context, in *RoomLoginData, opts ...grpc.CallOption) (*Empty, error)
	OnlineNotify(ctx context.Context, in *OnlineNotifyData, opts ...grpc.CallOption) (*Empty, error)
	GetRoomInfo(ctx context.Context, in *GetRoomInfoData, opts ...grpc.CallOption) (*GetRoomInfoRes, error)
	Waiting(ctx context.Context, in *WaitingData, opts ...grpc.CallOption) (*Empty, error)
	BeginBetting(ctx context.Context, in *BeginBettingData, opts ...grpc.CallOption) (*BeginBettingRes, error)
	EndBetting(ctx context.Context, in *EndBettingData, opts ...grpc.CallOption) (*Empty, error)
	ChangeBoot(ctx context.Context, in *ChangeBootData, opts ...grpc.CallOption) (*ChangeBootRes, error)
	CancelRound(ctx context.Context, in *CancelRoundData, opts ...grpc.CallOption) (*Empty, error)
	// baccarat
	RoundProcess0(ctx context.Context, in *RoundProcess0Data, opts ...grpc.CallOption) (*Empty, error)
	RoundResultType0(ctx context.Context, in *RoundResultType0Data, opts ...grpc.CallOption) (*Empty, error)
	UpdateResultType0(ctx context.Context, in *UpdateResultType0Data, opts ...grpc.CallOption) (*Empty, error)
	HistoryResultType0(ctx context.Context, in *HistoryResultType0Data, opts ...grpc.CallOption) (*HistoryResultType0Res, error)
	// dragonTiger
	RoundProcess1(ctx context.Context, in *RoundProcess1Data, opts ...grpc.CallOption) (*Empty, error)
	RoundResultType1(ctx context.Context, in *RoundResultType1Data, opts ...grpc.CallOption) (*Empty, error)
	UpdateResultType1(ctx context.Context, in *UpdateResultType1Data, opts ...grpc.CallOption) (*Empty, error)
	HistoryResultType1(ctx context.Context, in *HistoryResultType1Data, opts ...grpc.CallOption) (*HistoryResultType1Res, error)
	// sicbo
	RoundResultType6(ctx context.Context, in *RoundResultType6Data, opts ...grpc.CallOption) (*Empty, error)
	UpdateResultType6(ctx context.Context, in *UpdateResultType6Data, opts ...grpc.CallOption) (*Empty, error)
	HistoryResultType6(ctx context.Context, in *HistoryResultType6Data, opts ...grpc.CallOption) (*HistoryResultType6Res, error)
	RerollDice(ctx context.Context, in *RerollDiceData, opts ...grpc.CallOption) (*Empty, error)
	// niuniu
	RoundProcess2(ctx context.Context, in *RoundProcess2Data, opts ...grpc.CallOption) (*Empty, error)
	RoundResultType2(ctx context.Context, in *RoundResultType2Data, opts ...grpc.CallOption) (*Empty, error)
	UpdateResultType2(ctx context.Context, in *UpdateResultType2Data, opts ...grpc.CallOption) (*Empty, error)
	HistoryResultType2(ctx context.Context, in *HistoryResultType2Data, opts ...grpc.CallOption) (*HistoryResultType2Res, error)
	// rolette
	RoundResultType7(ctx context.Context, in *RoundResultType7Data, opts ...grpc.CallOption) (*Empty, error)
	UpdateResultType7(ctx context.Context, in *UpdateResultType7Data, opts ...grpc.CallOption) (*Empty, error)
	HistoryResultType7(ctx context.Context, in *HistoryResultType7Data, opts ...grpc.CallOption) (*HistoryResultType7Res, error)
	Rethrow(ctx context.Context, in *RethrowData, opts ...grpc.CallOption) (*Empty, error)
}

type rPCClient struct {
	cc *grpc.ClientConn
}

func NewRPCClient(cc *grpc.ClientConn) RPCClient {
	return &rPCClient{cc}
}

func (c *rPCClient) DealerLogin(ctx context.Context, in *DealerLoginData, opts ...grpc.CallOption) (*DealerLoginRes, error) {
	out := new(DealerLoginRes)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/DealerLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RoomLogin(ctx context.Context, in *RoomLoginData, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RoomLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) OnlineNotify(ctx context.Context, in *OnlineNotifyData, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/OnlineNotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) GetRoomInfo(ctx context.Context, in *GetRoomInfoData, opts ...grpc.CallOption) (*GetRoomInfoRes, error) {
	out := new(GetRoomInfoRes)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/GetRoomInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) Waiting(ctx context.Context, in *WaitingData, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/Waiting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) BeginBetting(ctx context.Context, in *BeginBettingData, opts ...grpc.CallOption) (*BeginBettingRes, error) {
	out := new(BeginBettingRes)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/BeginBetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) EndBetting(ctx context.Context, in *EndBettingData, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/EndBetting", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) ChangeBoot(ctx context.Context, in *ChangeBootData, opts ...grpc.CallOption) (*ChangeBootRes, error) {
	out := new(ChangeBootRes)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/ChangeBoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) CancelRound(ctx context.Context, in *CancelRoundData, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/CancelRound", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RoundProcess0(ctx context.Context, in *RoundProcess0Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RoundProcess0", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RoundResultType0(ctx context.Context, in *RoundResultType0Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RoundResultType0", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) UpdateResultType0(ctx context.Context, in *UpdateResultType0Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/UpdateResultType0", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) HistoryResultType0(ctx context.Context, in *HistoryResultType0Data, opts ...grpc.CallOption) (*HistoryResultType0Res, error) {
	out := new(HistoryResultType0Res)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/HistoryResultType0", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RoundProcess1(ctx context.Context, in *RoundProcess1Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RoundProcess1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RoundResultType1(ctx context.Context, in *RoundResultType1Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RoundResultType1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) UpdateResultType1(ctx context.Context, in *UpdateResultType1Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/UpdateResultType1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) HistoryResultType1(ctx context.Context, in *HistoryResultType1Data, opts ...grpc.CallOption) (*HistoryResultType1Res, error) {
	out := new(HistoryResultType1Res)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/HistoryResultType1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RoundResultType6(ctx context.Context, in *RoundResultType6Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RoundResultType6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) UpdateResultType6(ctx context.Context, in *UpdateResultType6Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/UpdateResultType6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) HistoryResultType6(ctx context.Context, in *HistoryResultType6Data, opts ...grpc.CallOption) (*HistoryResultType6Res, error) {
	out := new(HistoryResultType6Res)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/HistoryResultType6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RerollDice(ctx context.Context, in *RerollDiceData, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RerollDice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RoundProcess2(ctx context.Context, in *RoundProcess2Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RoundProcess2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RoundResultType2(ctx context.Context, in *RoundResultType2Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RoundResultType2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) UpdateResultType2(ctx context.Context, in *UpdateResultType2Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/UpdateResultType2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) HistoryResultType2(ctx context.Context, in *HistoryResultType2Data, opts ...grpc.CallOption) (*HistoryResultType2Res, error) {
	out := new(HistoryResultType2Res)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/HistoryResultType2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) RoundResultType7(ctx context.Context, in *RoundResultType7Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/RoundResultType7", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) UpdateResultType7(ctx context.Context, in *UpdateResultType7Data, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/UpdateResultType7", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) HistoryResultType7(ctx context.Context, in *HistoryResultType7Data, opts ...grpc.CallOption) (*HistoryResultType7Res, error) {
	out := new(HistoryResultType7Res)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/HistoryResultType7", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rPCClient) Rethrow(ctx context.Context, in *RethrowData, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protobuf.RPC/Rethrow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCServer is the server API for RPC service.
type RPCServer interface {
	DealerLogin(context.Context, *DealerLoginData) (*DealerLoginRes, error)
	RoomLogin(context.Context, *RoomLoginData) (*Empty, error)
	OnlineNotify(context.Context, *OnlineNotifyData) (*Empty, error)
	GetRoomInfo(context.Context, *GetRoomInfoData) (*GetRoomInfoRes, error)
	Waiting(context.Context, *WaitingData) (*Empty, error)
	BeginBetting(context.Context, *BeginBettingData) (*BeginBettingRes, error)
	EndBetting(context.Context, *EndBettingData) (*Empty, error)
	ChangeBoot(context.Context, *ChangeBootData) (*ChangeBootRes, error)
	CancelRound(context.Context, *CancelRoundData) (*Empty, error)
	// baccarat
	RoundProcess0(context.Context, *RoundProcess0Data) (*Empty, error)
	RoundResultType0(context.Context, *RoundResultType0Data) (*Empty, error)
	UpdateResultType0(context.Context, *UpdateResultType0Data) (*Empty, error)
	HistoryResultType0(context.Context, *HistoryResultType0Data) (*HistoryResultType0Res, error)
	// dragonTiger
	RoundProcess1(context.Context, *RoundProcess1Data) (*Empty, error)
	RoundResultType1(context.Context, *RoundResultType1Data) (*Empty, error)
	UpdateResultType1(context.Context, *UpdateResultType1Data) (*Empty, error)
	HistoryResultType1(context.Context, *HistoryResultType1Data) (*HistoryResultType1Res, error)
	// sicbo
	RoundResultType6(context.Context, *RoundResultType6Data) (*Empty, error)
	UpdateResultType6(context.Context, *UpdateResultType6Data) (*Empty, error)
	HistoryResultType6(context.Context, *HistoryResultType6Data) (*HistoryResultType6Res, error)
	RerollDice(context.Context, *RerollDiceData) (*Empty, error)
	// niuniu
	RoundProcess2(context.Context, *RoundProcess2Data) (*Empty, error)
	RoundResultType2(context.Context, *RoundResultType2Data) (*Empty, error)
	UpdateResultType2(context.Context, *UpdateResultType2Data) (*Empty, error)
	HistoryResultType2(context.Context, *HistoryResultType2Data) (*HistoryResultType2Res, error)
	// rolette
	RoundResultType7(context.Context, *RoundResultType7Data) (*Empty, error)
	UpdateResultType7(context.Context, *UpdateResultType7Data) (*Empty, error)
	HistoryResultType7(context.Context, *HistoryResultType7Data) (*HistoryResultType7Res, error)
	Rethrow(context.Context, *RethrowData) (*Empty, error)
}

func RegisterRPCServer(s *grpc.Server, srv RPCServer) {
	s.RegisterService(&_RPC_serviceDesc, srv)
}

func _RPC_DealerLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DealerLoginData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).DealerLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/DealerLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).DealerLogin(ctx, req.(*DealerLoginData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RoomLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomLoginData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RoomLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RoomLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RoomLogin(ctx, req.(*RoomLoginData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_OnlineNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnlineNotifyData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).OnlineNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/OnlineNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).OnlineNotify(ctx, req.(*OnlineNotifyData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_GetRoomInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomInfoData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).GetRoomInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/GetRoomInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).GetRoomInfo(ctx, req.(*GetRoomInfoData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Waiting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitingData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Waiting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/Waiting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Waiting(ctx, req.(*WaitingData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_BeginBetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BeginBettingData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).BeginBetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/BeginBetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).BeginBetting(ctx, req.(*BeginBettingData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_EndBetting_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EndBettingData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).EndBetting(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/EndBetting",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).EndBetting(ctx, req.(*EndBettingData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_ChangeBoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeBootData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).ChangeBoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/ChangeBoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).ChangeBoot(ctx, req.(*ChangeBootData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_CancelRound_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelRoundData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).CancelRound(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/CancelRound",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).CancelRound(ctx, req.(*CancelRoundData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RoundProcess0_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoundProcess0Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RoundProcess0(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RoundProcess0",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RoundProcess0(ctx, req.(*RoundProcess0Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RoundResultType0_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoundResultType0Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RoundResultType0(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RoundResultType0",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RoundResultType0(ctx, req.(*RoundResultType0Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_UpdateResultType0_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateResultType0Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).UpdateResultType0(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/UpdateResultType0",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).UpdateResultType0(ctx, req.(*UpdateResultType0Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_HistoryResultType0_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryResultType0Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).HistoryResultType0(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/HistoryResultType0",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).HistoryResultType0(ctx, req.(*HistoryResultType0Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RoundProcess1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoundProcess1Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RoundProcess1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RoundProcess1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RoundProcess1(ctx, req.(*RoundProcess1Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RoundResultType1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoundResultType1Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RoundResultType1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RoundResultType1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RoundResultType1(ctx, req.(*RoundResultType1Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_UpdateResultType1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateResultType1Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).UpdateResultType1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/UpdateResultType1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).UpdateResultType1(ctx, req.(*UpdateResultType1Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_HistoryResultType1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryResultType1Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).HistoryResultType1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/HistoryResultType1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).HistoryResultType1(ctx, req.(*HistoryResultType1Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RoundResultType6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoundResultType6Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RoundResultType6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RoundResultType6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RoundResultType6(ctx, req.(*RoundResultType6Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_UpdateResultType6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateResultType6Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).UpdateResultType6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/UpdateResultType6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).UpdateResultType6(ctx, req.(*UpdateResultType6Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_HistoryResultType6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryResultType6Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).HistoryResultType6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/HistoryResultType6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).HistoryResultType6(ctx, req.(*HistoryResultType6Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RerollDice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RerollDiceData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RerollDice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RerollDice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RerollDice(ctx, req.(*RerollDiceData))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RoundProcess2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoundProcess2Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RoundProcess2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RoundProcess2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RoundProcess2(ctx, req.(*RoundProcess2Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RoundResultType2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoundResultType2Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RoundResultType2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RoundResultType2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RoundResultType2(ctx, req.(*RoundResultType2Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_UpdateResultType2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateResultType2Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).UpdateResultType2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/UpdateResultType2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).UpdateResultType2(ctx, req.(*UpdateResultType2Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_HistoryResultType2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryResultType2Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).HistoryResultType2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/HistoryResultType2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).HistoryResultType2(ctx, req.(*HistoryResultType2Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_RoundResultType7_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoundResultType7Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).RoundResultType7(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/RoundResultType7",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).RoundResultType7(ctx, req.(*RoundResultType7Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_UpdateResultType7_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateResultType7Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).UpdateResultType7(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/UpdateResultType7",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).UpdateResultType7(ctx, req.(*UpdateResultType7Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_HistoryResultType7_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryResultType7Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).HistoryResultType7(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/HistoryResultType7",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).HistoryResultType7(ctx, req.(*HistoryResultType7Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _RPC_Rethrow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RethrowData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCServer).Rethrow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RPC/Rethrow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCServer).Rethrow(ctx, req.(*RethrowData))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.RPC",
	HandlerType: (*RPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DealerLogin",
			Handler:    _RPC_DealerLogin_Handler,
		},
		{
			MethodName: "RoomLogin",
			Handler:    _RPC_RoomLogin_Handler,
		},
		{
			MethodName: "OnlineNotify",
			Handler:    _RPC_OnlineNotify_Handler,
		},
		{
			MethodName: "GetRoomInfo",
			Handler:    _RPC_GetRoomInfo_Handler,
		},
		{
			MethodName: "Waiting",
			Handler:    _RPC_Waiting_Handler,
		},
		{
			MethodName: "BeginBetting",
			Handler:    _RPC_BeginBetting_Handler,
		},
		{
			MethodName: "EndBetting",
			Handler:    _RPC_EndBetting_Handler,
		},
		{
			MethodName: "ChangeBoot",
			Handler:    _RPC_ChangeBoot_Handler,
		},
		{
			MethodName: "CancelRound",
			Handler:    _RPC_CancelRound_Handler,
		},
		{
			MethodName: "RoundProcess0",
			Handler:    _RPC_RoundProcess0_Handler,
		},
		{
			MethodName: "RoundResultType0",
			Handler:    _RPC_RoundResultType0_Handler,
		},
		{
			MethodName: "UpdateResultType0",
			Handler:    _RPC_UpdateResultType0_Handler,
		},
		{
			MethodName: "HistoryResultType0",
			Handler:    _RPC_HistoryResultType0_Handler,
		},
		{
			MethodName: "RoundProcess1",
			Handler:    _RPC_RoundProcess1_Handler,
		},
		{
			MethodName: "RoundResultType1",
			Handler:    _RPC_RoundResultType1_Handler,
		},
		{
			MethodName: "UpdateResultType1",
			Handler:    _RPC_UpdateResultType1_Handler,
		},
		{
			MethodName: "HistoryResultType1",
			Handler:    _RPC_HistoryResultType1_Handler,
		},
		{
			MethodName: "RoundResultType6",
			Handler:    _RPC_RoundResultType6_Handler,
		},
		{
			MethodName: "UpdateResultType6",
			Handler:    _RPC_UpdateResultType6_Handler,
		},
		{
			MethodName: "HistoryResultType6",
			Handler:    _RPC_HistoryResultType6_Handler,
		},
		{
			MethodName: "RerollDice",
			Handler:    _RPC_RerollDice_Handler,
		},
		{
			MethodName: "RoundProcess2",
			Handler:    _RPC_RoundProcess2_Handler,
		},
		{
			MethodName: "RoundResultType2",
			Handler:    _RPC_RoundResultType2_Handler,
		},
		{
			MethodName: "UpdateResultType2",
			Handler:    _RPC_UpdateResultType2_Handler,
		},
		{
			MethodName: "HistoryResultType2",
			Handler:    _RPC_HistoryResultType2_Handler,
		},
		{
			MethodName: "RoundResultType7",
			Handler:    _RPC_RoundResultType7_Handler,
		},
		{
			MethodName: "UpdateResultType7",
			Handler:    _RPC_UpdateResultType7_Handler,
		},
		{
			MethodName: "HistoryResultType7",
			Handler:    _RPC_HistoryResultType7_Handler,
		},
		{
			MethodName: "Rethrow",
			Handler:    _RPC_Rethrow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf.proto",
}

func init() { proto.RegisterFile("protobuf.proto", fileDescriptor_protobuf_e9954b86430771e1) }

var fileDescriptor_protobuf_e9954b86430771e1 = []byte{
	// 1471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x5f, 0x6f, 0xdc, 0x44,
	0x10, 0xef, 0xe5, 0xe2, 0xfc, 0x99, 0xcb, 0xbf, 0x2e, 0x4d, 0xeb, 0x1e, 0xa2, 0x3d, 0x19, 0x44,
	0x43, 0x1f, 0xaa, 0xd8, 0x91, 0xee, 0x84, 0x0a, 0x14, 0x92, 0x8b, 0x4a, 0x25, 0x68, 0x22, 0xb7,
	0x08, 0xf5, 0x81, 0x87, 0xcd, 0x79, 0x73, 0xb5, 0xea, 0xf3, 0x5a, 0x3e, 0x1f, 0xb9, 0xf0, 0xca,
	0x2b, 0xf0, 0xc0, 0x13, 0x7c, 0x11, 0x78, 0x81, 0x6f, 0x02, 0xdf, 0x05, 0xed, 0x7a, 0x6d, 0xaf,
	0xcf, 0x7b, 0x3e, 0xbb, 0xaa, 0x54, 0x04, 0x7d, 0xf3, 0xcc, 0xce, 0xcc, 0xce, 0xfc, 0x66, 0x66,
	0x77, 0x3d, 0xb0, 0x15, 0x84, 0x34, 0xa2, 0x67, 0x93, 0xf3, 0x7b, 0xfc, 0x03, 0xad, 0x25, 0xb4,
	0xb1, 0x0a, 0xda, 0xf1, 0x28, 0x88, 0x2e, 0x8d, 0x6f, 0x60, 0xbb, 0x4f, 0xb0, 0x47, 0xc2, 0x2f,
	0xe8, 0xd0, 0xf5, 0xfb, 0x38, 0xc2, 0xe8, 0x3a, 0xac, 0x84, 0x94, 0x8e, 0x1e, 0xf5, 0xf5, 0x46,
	0xa7, 0xb1, 0xd7, 0xb4, 0x05, 0xc5, 0xf8, 0x0e, 0x17, 0xd5, 0x97, 0x62, 0x7e, 0x4c, 0xa1, 0x36,
	0xac, 0x05, 0x78, 0x3c, 0xbe, 0xa0, 0xa1, 0xa3, 0x37, 0x3b, 0x8d, 0xbd, 0x75, 0x3b, 0xa5, 0x8d,
	0xbb, 0xb0, 0x25, 0x99, 0xb7, 0xc9, 0x18, 0xe9, 0xb0, 0x3a, 0x9e, 0x0c, 0x06, 0x64, 0x3c, 0x16,
	0xe6, 0x13, 0xd2, 0xb8, 0x03, 0x9b, 0x36, 0xa5, 0xa3, 0x85, 0x8e, 0x18, 0x77, 0x61, 0xe7, 0xc4,
	0xf7, 0x5c, 0x9f, 0x3c, 0xa6, 0x91, 0x7b, 0x7e, 0x59, 0x2a, 0xfb, 0x01, 0x6c, 0x3f, 0x24, 0x11,
	0xb3, 0xfb, 0xc8, 0x3f, 0xa7, 0xa5, 0xa2, 0x3f, 0x37, 0x61, 0x4b, 0x92, 0x65, 0xce, 0x22, 0x58,
	0x3e, 0xa3, 0x34, 0x12, 0x82, 0xfc, 0x1b, 0x5d, 0x03, 0x2d, 0xa4, 0x13, 0xdf, 0x11, 0x28, 0xc4,
	0x84, 0x64, 0xb4, 0x99, 0x03, 0xad, 0x0d, 0x6b, 0xec, 0xeb, 0x31, 0x1e, 0x11, 0x7d, 0x39, 0x06,
	0x27, 0xa1, 0xd1, 0x1e, 0x6c, 0x9f, 0x61, 0xff, 0x05, 0x09, 0x4f, 0x3d, 0x7c, 0x49, 0xc2, 0x2f,
	0x5d, 0x5f, 0xd7, 0xb8, 0xf2, 0x2c, 0xbb, 0x20, 0x89, 0xa7, 0xfa, 0x8a, 0x42, 0x12, 0x4f, 0x99,
	0x1f, 0x91, 0x4b, 0x98, 0xa9, 0xd5, 0xd8, 0x8f, 0x98, 0x4a, 0xf8, 0x78, 0xaa, 0xaf, 0x65, 0x7c,
	0x3c, 0x45, 0xfb, 0xf0, 0x96, 0x6c, 0xe2, 0x14, 0xbb, 0xdc, 0x8f, 0x75, 0x2e, 0xa4, 0x5a, 0x52,
	0x6a, 0xe0, 0xa9, 0x0e, 0x73, 0x34, 0x62, 0x9f, 0x28, 0xcf, 0x97, 0xde, 0x8a, 0xf7, 0x8e, 0x29,
	0x64, 0xc0, 0xc6, 0x19, 0x89, 0x8e, 0xe8, 0xc4, 0x8f, 0xfa, 0xf4, 0xc2, 0xd7, 0x37, 0xf8, 0x6a,
	0x8e, 0x67, 0x9c, 0x40, 0xeb, 0x6b, 0xec, 0x46, 0xae, 0x3f, 0x2c, 0xad, 0xcd, 0x24, 0x51, 0x4b,
	0xaa, 0x44, 0x35, 0xa5, 0x44, 0x19, 0x4f, 0x61, 0xe7, 0x90, 0x0c, 0x5d, 0xff, 0x90, 0x44, 0xaf,
	0xd0, 0xea, 0x1d, 0xd8, 0x96, 0xad, 0xb2, 0xda, 0x49, 0x05, 0x1b, 0xb2, 0xe0, 0x1e, 0x6c, 0x1d,
	0xfb, 0x4e, 0x85, 0xcd, 0x99, 0xe4, 0xd1, 0x73, 0xec, 0x0f, 0xc9, 0x21, 0xa5, 0x51, 0xa9, 0xe4,
	0xbb, 0xb0, 0x99, 0x49, 0xce, 0x29, 0x5b, 0xe3, 0x01, 0x6c, 0x1f, 0x61, 0x7f, 0x40, 0x3c, 0x9b,
	0xf9, 0xa1, 0xb0, 0xa7, 0xa5, 0x61, 0xab, 0x43, 0xfc, 0xbe, 0x01, 0x57, 0xb9, 0xee, 0x69, 0x48,
	0x59, 0xbf, 0xee, 0x57, 0xb3, 0x91, 0xeb, 0x92, 0x6b, 0xa0, 0xd1, 0x0b, 0x9f, 0x84, 0xdc, 0xb2,
	0x66, 0xc7, 0x04, 0xe3, 0x06, 0xf4, 0x05, 0x09, 0x79, 0x83, 0x68, 0x76, 0x4c, 0x30, 0xae, 0xeb,
	0x3b, 0x64, 0xca, 0x7b, 0x42, 0xb3, 0x63, 0xc2, 0xf8, 0xa5, 0x09, 0xd7, 0xb8, 0x17, 0x36, 0x19,
	0x4f, 0xbc, 0xe8, 0xe9, 0x65, 0x40, 0x5e, 0xc6, 0x11, 0x26, 0xcd, 0x0d, 0x08, 0x4f, 0x04, 0x85,
	0x6e, 0x01, 0x88, 0x0a, 0xc6, 0x6e, 0xe2, 0x8f, 0xc4, 0x61, 0xeb, 0x41, 0x5a, 0xdb, 0xc2, 0x33,
	0x89, 0xc3, 0xda, 0xfd, 0xcc, 0x1d, 0x3e, 0x19, 0x61, 0xcf, 0xe3, 0x1d, 0xaa, 0xd9, 0x29, 0xcd,
	0x4e, 0x3e, 0xec, 0x5f, 0x72, 0xc5, 0x55, 0xbe, 0x94, 0x90, 0xa8, 0x03, 0xad, 0x80, 0x84, 0xe7,
	0x64, 0x10, 0xf1, 0xd5, 0x35, 0xbe, 0x2a, 0xb3, 0x98, 0xdd, 0xf1, 0x24, 0x20, 0xe1, 0x13, 0x77,
	0xca, 0x7b, 0x53, 0xb3, 0x53, 0x9a, 0x69, 0x0b, 0x0f, 0xa9, 0xeb, 0x47, 0xbc, 0x11, 0x35, 0x5b,
	0x66, 0x71, 0xfb, 0xb1, 0x8f, 0x5c, 0xa2, 0x25, 0xec, 0x67, 0x2c, 0xd9, 0x06, 0x4b, 0xc4, 0x46,
	0xa7, 0x29, 0xdb, 0x60, 0xe9, 0x90, 0x6c, 0x30, 0x89, 0xcd, 0x58, 0x42, 0x62, 0x19, 0xbf, 0x36,
	0x61, 0xf7, 0xab, 0xc0, 0xc1, 0x11, 0x79, 0x93, 0x9b, 0x7f, 0x5b, 0x6e, 0xf6, 0xe1, 0xfa, 0xe7,
	0xee, 0x38, 0xa2, 0xe1, 0x65, 0xc5, 0xdc, 0x18, 0xcf, 0x60, 0xb7, 0xa8, 0xc1, 0x0e, 0x97, 0x4f,
	0xd3, 0xf4, 0x34, 0x3a, 0xcd, 0xbd, 0x96, 0xb5, 0x77, 0x2f, 0x7d, 0x65, 0x28, 0x15, 0x1e, 0xf9,
	0x3e, 0x09, 0x19, 0x91, 0x24, 0xd2, 0xf8, 0x08, 0x6e, 0x95, 0x4b, 0xa2, 0x76, 0x6e, 0x0f, 0xed,
	0x70, 0x69, 0xa7, 0x91, 0x6a, 0xcf, 0x9e, 0x43, 0xe6, 0x6b, 0x39, 0x87, 0x7e, 0x5b, 0x2a, 0x9c,
	0x43, 0xe6, 0x2b, 0xac, 0xf5, 0x0e, 0xb4, 0x9c, 0x10, 0x0f, 0xa9, 0x7f, 0x2a, 0x39, 0x24, 0xb3,
	0x58, 0xb5, 0x47, 0xee, 0x30, 0x49, 0xb9, 0xa8, 0xf6, 0x8c, 0x83, 0xde, 0x83, 0xcd, 0x58, 0xfc,
	0xc4, 0x71, 0x8e, 0xbf, 0x25, 0xbe, 0x28, 0xf9, 0x3c, 0x13, 0xbd, 0x0f, 0x5b, 0x31, 0xc3, 0x26,
	0xce, 0xa1, 0x87, 0x07, 0x2f, 0x44, 0xf9, 0xcf, 0x70, 0xd9, 0x55, 0xcd, 0x6d, 0x27, 0xc6, 0xe2,
	0x36, 0xc8, 0xf1, 0xd8, 0x8e, 0x9c, 0x4e, 0x4d, 0xc5, 0xcd, 0x90, 0x67, 0x1a, 0xbf, 0x2f, 0x15,
	0x4f, 0x89, 0x37, 0xc8, 0x55, 0x41, 0x4e, 0xd5, 0xc3, 0xa5, 0xc8, 0x19, 0x07, 0x8a, 0x1e, 0x36,
	0x59, 0x0f, 0xd7, 0xe9, 0x2f, 0xeb, 0xb5, 0xf4, 0xd7, 0x1f, 0xc5, 0xfe, 0x7a, 0x19, 0x47, 0x10,
	0x2c, 0x3f, 0x27, 0xd8, 0x11, 0x7e, 0xf0, 0x6f, 0xd4, 0x83, 0x15, 0xee, 0xcf, 0x3e, 0xf7, 0xa3,
	0x65, 0xdd, 0xce, 0x0e, 0xb0, 0xd9, 0x1d, 0x4f, 0x98, 0x9c, 0x2d, 0xc4, 0x53, 0x45, 0x93, 0xbb,
	0x5a, 0x59, 0xd1, 0x4c, 0x15, 0x2d, 0x5e, 0x4a, 0x95, 0x15, 0xad, 0x54, 0xf1, 0x80, 0x17, 0x57,
	0x65, 0xc5, 0x03, 0x63, 0x00, 0xbb, 0x4a, 0x01, 0xa9, 0x6d, 0x1a, 0xb9, 0xb6, 0xd1, 0x93, 0xdc,
	0x2c, 0xa5, 0x05, 0x21, 0xf2, 0xa3, 0xc3, 0x6a, 0x80, 0xa3, 0x88, 0x84, 0xbe, 0x40, 0x31, 0x21,
	0x8d, 0x3f, 0x15, 0xad, 0xfc, 0x26, 0x49, 0xd5, 0x93, 0xa4, 0x6a, 0x68, 0xab, 0xf6, 0xa5, 0x6c,
	0xd5, 0xbd, 0x94, 0xad, 0xca, 0x97, 0xb2, 0x55, 0xf9, 0x52, 0xfe, 0xb1, 0xd8, 0xae, 0xdd, 0x97,
	0xab, 0x04, 0xc7, 0x1d, 0x10, 0xbd, 0xc9, 0x5f, 0x30, 0xfc, 0x1b, 0xed, 0x40, 0x73, 0x3c, 0x19,
	0x89, 0x33, 0x83, 0x7d, 0xe6, 0x1e, 0x72, 0x5a, 0xf1, 0x21, 0x47, 0x73, 0xc7, 0x76, 0x42, 0xf2,
	0x3f, 0xe0, 0xd0, 0x0d, 0x3c, 0x22, 0x0e, 0x6a, 0x41, 0xb1, 0x3d, 0x83, 0xec, 0x65, 0xc7, 0xbf,
	0xd1, 0x03, 0x58, 0x09, 0xb0, 0x3b, 0xa4, 0x17, 0xfa, 0x3a, 0x87, 0xf3, 0xce, 0xdc, 0x94, 0xf2,
	0x28, 0x25, 0x34, 0x63, 0x35, 0xe3, 0x3e, 0xbc, 0x53, 0x2a, 0x58, 0x0a, 0xe6, 0x4f, 0x8a, 0xbe,
	0xfa, 0x5f, 0xa3, 0xa9, 0x6a, 0x94, 0x6e, 0xed, 0x9b, 0xaf, 0xbb, 0xe8, 0xe6, 0xfb, 0x04, 0xb6,
	0x6c, 0x12, 0x52, 0xcf, 0xeb, 0xbb, 0x03, 0x52, 0x1f, 0x6f, 0xe3, 0xaf, 0x46, 0xa1, 0x09, 0x7a,
	0xaf, 0xf0, 0x65, 0x23, 0x27, 0x6a, 0x79, 0x7e, 0xa2, 0xb4, 0x7c, 0xa2, 0xda, 0xb0, 0x16, 0x26,
	0xcf, 0x0a, 0xf1, 0xd7, 0x93, 0xd0, 0x6c, 0x7f, 0x87, 0x7e, 0x47, 0x7c, 0x91, 0xc3, 0x98, 0x60,
	0xfb, 0x0f, 0xa8, 0x37, 0x19, 0x25, 0x6f, 0x15, 0x41, 0x19, 0x7f, 0x37, 0x8a, 0x65, 0xf9, 0x5f,
	0x8a, 0x4f, 0x55, 0x65, 0xbd, 0xda, 0x55, 0xd6, 0x5b, 0x54, 0x65, 0xf7, 0xa1, 0x65, 0x93, 0xe8,
	0x79, 0x48, 0x2f, 0xea, 0x63, 0x67, 0xfd, 0xb0, 0x03, 0x4d, 0xfb, 0xf4, 0x08, 0xf5, 0xa1, 0x25,
	0xcd, 0x55, 0xd1, 0xcd, 0xac, 0xa3, 0x66, 0xa6, 0xb9, 0x6d, 0x5d, 0xb9, 0x64, 0x93, 0xb1, 0x71,
	0x05, 0xf5, 0x60, 0x3d, 0x9d, 0xb8, 0xa2, 0x1b, 0x72, 0x57, 0x4a, 0x63, 0xd8, 0xf6, 0x76, 0xb6,
	0x10, 0xcf, 0x8c, 0xaf, 0xa0, 0x8f, 0x61, 0x43, 0x9e, 0xc0, 0xa2, 0x76, 0x26, 0x32, 0x3b, 0x99,
	0x55, 0xa9, 0xf7, 0xa1, 0x25, 0x0d, 0x5a, 0x65, 0xef, 0x67, 0x66, 0xb5, 0xb2, 0xf7, 0xf9, 0xd1,
	0xac, 0x71, 0x05, 0x1d, 0xc0, 0xaa, 0x18, 0x0d, 0xa2, 0xdd, 0x4c, 0x4c, 0x9a, 0x16, 0xaa, 0xb6,
	0x7e, 0x08, 0x1b, 0xf2, 0xa0, 0x4e, 0xf6, 0x7c, 0x76, 0x2c, 0xd8, 0xbe, 0xa9, 0x5e, 0x8b, 0x77,
	0xff, 0x10, 0x20, 0x1b, 0xe4, 0x21, 0xc9, 0xcf, 0xfc, 0x78, 0x4f, 0xe5, 0xc3, 0x67, 0x00, 0xd9,
	0xbc, 0x4e, 0x56, 0xcd, 0xcf, 0xfb, 0xda, 0x37, 0x54, 0x2b, 0xf1, 0xee, 0xf7, 0xa1, 0x25, 0x4d,
	0xf3, 0x64, 0x04, 0x67, 0x86, 0x7c, 0xaa, 0xfd, 0x1f, 0xc0, 0x66, 0x6e, 0x90, 0x87, 0xde, 0x9e,
	0x39, 0x90, 0xe5, 0x09, 0x9f, 0xca, 0xc0, 0x31, 0xec, 0xcc, 0xce, 0xe0, 0xd0, 0xad, 0xb9, 0x87,
	0xfa, 0xfe, 0xfc, 0x5c, 0x5c, 0x2d, 0xcc, 0x8b, 0x90, 0xf4, 0x7a, 0x52, 0x0e, 0x93, 0x54, 0x86,
	0x9e, 0x01, 0x2a, 0x0e, 0x14, 0x50, 0xa7, 0x6c, 0x30, 0xc1, 0x4d, 0xdd, 0x5e, 0x30, 0xba, 0x28,
	0x62, 0x65, 0xce, 0xc3, 0xca, 0xac, 0x8e, 0x95, 0x59, 0x82, 0x95, 0x59, 0x03, 0x2b, 0xb3, 0x0c,
	0x2b, 0xb3, 0x0e, 0x56, 0x66, 0x29, 0x56, 0xe6, 0x42, 0xac, 0xcc, 0x18, 0xab, 0x62, 0xa8, 0xdd,
	0x92, 0x50, 0xbb, 0x35, 0x42, 0xed, 0x96, 0x85, 0xda, 0xad, 0x13, 0x6a, 0xb7, 0x34, 0xd4, 0xee,
	0xc2, 0x50, 0xbb, 0x69, 0xf7, 0x67, 0x4f, 0x05, 0xb9, 0x85, 0xf3, 0x0f, 0x88, 0x0a, 0xdd, 0x67,
	0xcd, 0xab, 0x28, 0xab, 0x7a, 0x45, 0x59, 0x25, 0x30, 0x5b, 0x35, 0x60, 0xb6, 0xca, 0x60, 0xb6,
	0xea, 0xc0, 0x6c, 0x95, 0xc2, 0x6c, 0x2d, 0x84, 0xd9, 0x9a, 0x57, 0x51, 0xbd, 0x92, 0x50, 0x7b,
	0x35, 0x42, 0xed, 0x95, 0x85, 0xda, 0xab, 0x13, 0x6a, 0xaf, 0x34, 0xd4, 0xde, 0xc2, 0x50, 0x7b,
	0xe9, 0x6d, 0x26, 0x9e, 0x05, 0xf2, 0x6d, 0x26, 0xbd, 0x14, 0x14, 0xfe, 0x9c, 0xad, 0x70, 0xce,
	0xc1, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x48, 0x6d, 0xf3, 0x00, 0xe9, 0x1d, 0x00, 0x00,
}
